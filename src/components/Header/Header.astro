---
// Header.astro - Componente de header con navegación
import ZumgoButton from '../ZumgoButton/ZumgoButton.astro'

// Datos de navegación
const navItems = [
  { name: 'Inicio', href: '#inicio' },
  { name: 'Qué es Zumgo', href: '#que-es' },
  { name: 'Dónde encaja', href: '#donde-encaja' },
  { name: 'Ubicaciones', href: '#ubicaciones' },
]
---

<header class="header" id="header">
  <div class="header__container">
    <!-- Logo -->
    <div class="header__logo">
      <a href="#inicio" class="header__logo-link">
        <img src="/zumgo-logo.svg" alt="Zumgo" class="header__logo-image" />
      </a>
    </div>

    <!-- Desktop Navigation -->
    <nav class="header__nav header__nav--desktop">
      <ul class="header__nav-list">
        {
          navItems.map((item) => (
            <li class="header__nav-item">
              <a href={item.href} class="header__nav-link">
                {item.name}
              </a>
            </li>
          ))
        }
      </ul>

      <!-- Botón Contacto en desktop -->
      <ZumgoButton variant="forest" href="#contacto" class="header__cta">
        Contacto
      </ZumgoButton>
    </nav>

    <!-- Mobile Menu Button -->
    <button
      class="header__mobile-toggle"
      id="mobileToggle"
      type="button"
      aria-label="Abrir menú"
    >
      <span class="header__hamburger"></span>
      <span class="header__hamburger"></span>
      <span class="header__hamburger"></span>
    </button>

    <!-- Mobile Navigation -->
    <nav class="header__nav header__nav--mobile" id="mobileNav">
      <ul class="header__nav-list">
        {
          navItems.map((item) => (
            <li class="header__nav-item">
              <a href={item.href} class="header__nav-link">
                {item.name}
              </a>
            </li>
          ))
        }
        <li class="header__nav-item header__nav-item--cta">
          <ZumgoButton variant="forest" href="#contacto">
            Contacto
          </ZumgoButton>
        </li>
      </ul>
      <div class="header__social-links">
        <a href="https://instagram.com" target="_blank" rel="noopener noreferrer" class="header__social-link" aria-label="Instagram">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect>
            <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path>
            <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>
          </svg>
        </a>
        <a href="https://wa.me/" target="_blank" rel="noopener noreferrer" class="header__social-link" aria-label="WhatsApp">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
            <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
          </svg>
        </a>
      </div>
    </nav>
  </div>
</header>

<!-- Overlay para mobile -->
<div class="header__overlay" id="headerOverlay"></div>

<style>
  @import url('./Header.css');
</style>

<script>
  // Script para el menú mobile y scroll header
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('header')
    const mobileToggle = document.getElementById('mobileToggle')
    const mobileNav = document.getElementById('mobileNav')
    const overlay = document.getElementById('headerOverlay')

    let lastScrollY = window.scrollY
    let isScrollingDown = false

    // Mobile menu toggle
    function toggleMobileMenu() {
      const isOpen = mobileNav?.classList.contains('is-open')

      if (isOpen) {
        closeMobileMenu()
      } else {
        openMobileMenu()
      }
    }

    function openMobileMenu() {
      mobileNav?.classList.add('is-open')
      overlay?.classList.add('is-open')
      mobileToggle?.classList.add('is-open')
      document.body.classList.add('menu-open')
    }

    function closeMobileMenu() {
      mobileNav?.classList.remove('is-open')
      overlay?.classList.remove('is-open')
      mobileToggle?.classList.remove('is-open')
      document.body.classList.remove('menu-open')
    }

    // Event listeners
    mobileToggle?.addEventListener('click', toggleMobileMenu)
    overlay?.addEventListener('click', closeMobileMenu)

    // Cerrar menú al hacer click en un enlace
    const mobileLinks = mobileNav?.querySelectorAll('a')
    mobileLinks?.forEach((link) => {
      link.addEventListener('click', closeMobileMenu)
    })

    // Header scroll behavior (solo desktop)
    function handleScroll() {
      const currentScrollY = window.scrollY

      if (window.innerWidth >= 1090) {
        // Solo en desktop
        if (currentScrollY > lastScrollY && currentScrollY > 100) {
          // Scrolling down
          if (!isScrollingDown) {
            header?.classList.add('header--hidden')
            isScrollingDown = true
          }
        } else {
          // Scrolling up
          if (isScrollingDown) {
            header?.classList.remove('header--hidden')
            isScrollingDown = false
          }
        }
      }

      lastScrollY = currentScrollY
    }

    // Throttle scroll events
    let ticking = false
    window.addEventListener('scroll', () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          handleScroll()
          ticking = false
        })
        ticking = true
      }
    })

    // Smooth scroll para los enlaces internos
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
      anchor.addEventListener('click', function (e: Event) {
        e.preventDefault()
        const href = (e.currentTarget as HTMLAnchorElement).getAttribute('href')
        if (href) {
          const target = document.querySelector(href)
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start',
            })
          }
        }
      })
    })
  })
</script>
